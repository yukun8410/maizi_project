# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-09-18 03:33
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='昵称')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='名字')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='姓氏')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='email')),
                ('is_staff', models.BooleanField(default=False, help_text='是否能够登录管理后台', verbose_name='职员状态')),
                ('is_active', models.BooleanField(default=True, help_text='用户是否被激活，未激活则不能使用', verbose_name='是否激活')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('avatar_url', models.ImageField(blank=True, default='avatar/default_big.png', max_length=200, null=True, upload_to='avatar/%Y/%m', verbose_name='头像220x220')),
                ('avatar_middle_thumbnall', models.ImageField(blank=True, default='avatar/default_middle.png', max_length=200, null=True, upload_to='avatar/%Y/%m', verbose_name='头像104x104')),
                ('avatar_small_thumbnall', models.ImageField(blank=True, default='avatar/default_small.png', max_length=200, null=True, upload_to='avatar/%Y/%m', verbose_name='头像70x70')),
                ('avatar_alt', models.CharField(blank=True, max_length=100, null=True, verbose_name='头像ALT说明')),
                ('qq', models.CharField(blank=True, max_length=20, null=True, verbose_name='QQ号码')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='手机号码')),
                ('valid_email', models.SmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, verbose_name='是否验证邮箱')),
                ('company_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='公司名')),
                ('position', models.CharField(blank=True, max_length=150, null=True, verbose_name='职位名')),
                ('description', models.TextField(blank=True, null=True, verbose_name='个人介绍')),
                ('city', models.CharField(blank=True, max_length=30, null=True, verbose_name='城市')),
                ('province', models.CharField(blank=True, max_length=30, null=True, verbose_name='省份')),
                ('index', models.IntegerField(default=999, verbose_name='排列顺序(从小到大)')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'db_table': 'user_profile',
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
        ),
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='广告标题')),
                ('description', models.CharField(max_length=200, verbose_name='广告描述')),
                ('image_url', models.ImageField(upload_to='ad/%Y/%m', verbose_name='图片路径')),
                ('callback_url', models.URLField(blank=True, null=True, verbose_name='回调url')),
                ('index', models.IntegerField(default=999, verbose_name='排列顺序(从小到大)')),
            ],
            options={
                'db_table': 'ad',
                'verbose_name': '网站广告',
                'verbose_name_plural': '网站广告',
                'ordering': ['index', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CareerCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='职业课程名称')),
                ('short_name', models.CharField(max_length=10, unique=True, verbose_name='职业课程英文名称简写')),
                ('image', models.ImageField(upload_to='course/%Y/%m', verbose_name='课程小图标')),
                ('description', models.TextField(verbose_name='文字介绍')),
                ('student_count', models.IntegerField(default=0, verbose_name='学习人数')),
                ('market_page_url', models.URLField(blank=True, null=True, verbose_name='营销页面地址')),
                ('course_color', models.CharField(max_length=50, verbose_name='课程配色')),
                ('discount', models.DecimalField(decimal_places=2, default=1, max_digits=3, verbose_name='折扣')),
                ('click_count', models.IntegerField(default=0, verbose_name='点击次数')),
                ('index', models.IntegerField(default=999, verbose_name='职业课程顺序(从小到大)')),
                ('seo_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='SEO标题')),
                ('seo_keyword', models.CharField(blank=True, max_length=200, null=True, verbose_name='SEO关键词')),
                ('seo_description', models.TextField(blank=True, null=True, verbose_name='SEO描述')),
            ],
            options={
                'db_table': 'career_course',
                'verbose_name': '职业课程',
                'verbose_name_plural': '职业课程',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coding', models.CharField(max_length=30, unique=True, verbose_name='班级编号')),
                ('date_publish', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('date_open', models.DateTimeField(verbose_name='开课日期')),
                ('student_limit', models.IntegerField(default=25, verbose_name='学生上限')),
                ('current_student_count', models.IntegerField(default=0, verbose_name='当前报名数')),
                ('is_active', models.BooleanField(default=True, verbose_name='有效性')),
                ('status', models.SmallIntegerField(choices=[(1, '进行中'), (2, '已结束')], default=1, verbose_name='班级状态')),
                ('qq', models.CharField(max_length=13, verbose_name='班级QQ群')),
                ('career_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.CareerCourse', verbose_name='职业课程')),
            ],
            options={
                'db_table': 'class',
                'verbose_name': '班级',
                'verbose_name_plural': '班级',
            },
        ),
        migrations.CreateModel(
            name='ClassStudents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_point', models.IntegerField(default=0, verbose_name='学生在该班级下的学力')),
                ('pause_reason', models.CharField(blank=True, max_length=200, null=True, verbose_name='暂停原因')),
                ('pause_datetime', models.DateTimeField(blank=True, default=None, null=True, verbose_name='暂停时间')),
                ('student_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Class', verbose_name='班级')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='学生')),
            ],
            options={
                'db_table': 'class_students',
                'verbose_name': '班级学生',
                'verbose_name_plural': '班级学生',
                'ordering': ['-study_point'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='课程名称')),
                ('image', models.ImageField(upload_to='course/%Y/%m', verbose_name='课程封面')),
                ('description', models.TextField(verbose_name='课程描述')),
                ('is_active', models.BooleanField(default=True, verbose_name='有效性')),
                ('date_publish', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('need_days', models.IntegerField(default=7, verbose_name='无基础学生完成天数')),
                ('need_days_base', models.IntegerField(default=5, verbose_name='有基础学生完成天数')),
                ('student_count', models.IntegerField(default=0, verbose_name='学习人数')),
                ('favorite_count', models.IntegerField(default=0, verbose_name='收藏次数')),
                ('click_count', models.IntegerField(default=0, verbose_name='点击次数')),
                ('is_novice', models.BooleanField(default=False, verbose_name='是否是新手课程')),
                ('is_click', models.BooleanField(default=False, verbose_name='是否点击能进入课程')),
                ('index', models.IntegerField(default=999, verbose_name='课程顺序(从小到大)')),
                ('is_homeshow', models.BooleanField(default=False, verbose_name='是否在首页显示')),
                ('is_required', models.BooleanField(default=True, verbose_name='是否必修')),
            ],
            options={
                'db_table': 'course',
                'verbose_name': '课程',
                'verbose_name_plural': '课程',
            },
        ),
        migrations.CreateModel(
            name='CourseResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='课程资源名称')),
                ('download_url', models.FileField(upload_to='course/%Y/%m', verbose_name='下载地址')),
                ('download_count', models.IntegerField(default=0, verbose_name='下载次数')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Course', verbose_name='课程')),
            ],
            options={
                'db_table': 'course_resource',
                'verbose_name': '课程资源',
                'verbose_name_plural': '课程资源',
            },
        ),
        migrations.CreateModel(
            name='Discuss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='讨论内容')),
                ('parent_id', models.IntegerField(blank=True, null=True, verbose_name='父讨论ID')),
                ('date_publish', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
            ],
            options={
                'db_table': 'discuss',
                'verbose_name': '课程讨论',
                'verbose_name_plural': '课程讨论',
            },
        ),
        migrations.CreateModel(
            name='EmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='验证码')),
                ('email', models.CharField(max_length=50, verbose_name='邮箱')),
                ('type', models.SmallIntegerField(choices=[(0, '注册'), (1, '忘记密码')], default=0, verbose_name='验证码类型')),
                ('ip', models.CharField(max_length=20, verbose_name='请求来源IP')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'db_table': 'email_verify_record',
                'verbose_name': '邮箱验证记录',
                'verbose_name_plural': '邮箱验证记录',
            },
        ),
        migrations.CreateModel(
            name='Keywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='关键词')),
            ],
            options={
                'db_table': 'keywords',
                'verbose_name': '关键词',
                'verbose_name_plural': '关键词',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='章节名称')),
                ('video_url', models.CharField(max_length=200, verbose_name='视频资源URL')),
                ('video_length', models.IntegerField(verbose_name='视频长度（秒）')),
                ('play_count', models.IntegerField(default=0, verbose_name='播放次数')),
                ('share_count', models.IntegerField(default=0, verbose_name='分享次数')),
                ('index', models.IntegerField(default=999, verbose_name='章节顺序(从小到大)')),
                ('is_popup', models.BooleanField(default=False, verbose_name='是否弹出提示框（支付、登录）')),
                ('seo_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='SEO标题')),
                ('seo_keyword', models.CharField(blank=True, max_length=200, null=True, verbose_name='SEO关键词')),
                ('seo_description', models.TextField(blank=True, null=True, verbose_name='SEO描述')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Course', verbose_name='课程')),
            ],
            options={
                'db_table': 'lesson',
                'verbose_name': '视频章节',
                'verbose_name_plural': '视频章节',
                'ordering': ['index', 'id'],
            },
        ),
        migrations.CreateModel(
            name='LessonResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='章节资源名称')),
                ('download_url', models.FileField(upload_to='lesson/%Y/%m', verbose_name='下载地址')),
                ('download_count', models.IntegerField(default=0, verbose_name='下载次数')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Lesson', verbose_name='章节')),
            ],
            options={
                'db_table': 'lesson_resource',
                'verbose_name': '章节资源',
                'verbose_name_plural': '章节资源',
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='标题')),
                ('description', models.CharField(max_length=200, verbose_name='友情链接描述')),
                ('image_url', models.ImageField(blank=True, null=True, upload_to='links/%Y/%m', verbose_name='图片路径')),
                ('callback_url', models.URLField(verbose_name='回调url')),
                ('is_pic', models.BooleanField(default=False, verbose_name='是否为图片')),
            ],
            options={
                'db_table': 'links',
                'verbose_name': '友情链接',
                'verbose_name_plural': '友情链接',
            },
        ),
        migrations.CreateModel(
            name='MyCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(max_length=10, verbose_name='课程ID')),
                ('course_type', models.SmallIntegerField(choices=[(1, '课程'), (2, '职业课程')], verbose_name='课程类型')),
                ('index', models.IntegerField(default=999, verbose_name='课程显示顺序(从小到大)')),
                ('date_add', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mc_user', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'db_table': 'my_course',
                'verbose_name': '我的课程',
                'verbose_name_plural': '我的课程',
            },
        ),
        migrations.CreateModel(
            name='MyFavorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_favorite', models.DateTimeField(auto_now_add=True, verbose_name='收藏时间')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Course', verbose_name='课程')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mf_user', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'db_table': 'my_favorite',
                'verbose_name': '我的收藏',
                'verbose_name_plural': '我的收藏',
            },
        ),
        migrations.CreateModel(
            name='MyMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userA', models.IntegerField(verbose_name='用户A')),
                ('userB', models.IntegerField(verbose_name='用户B')),
                ('action_type', models.CharField(choices=[('1', '系统消息'), ('2', '课程讨论回复'), ('3', '论坛讨论回复')], max_length=1, verbose_name='类型')),
                ('action_id', models.IntegerField(blank=True, null=True, verbose_name='动作id')),
                ('action_content', models.TextField(blank=True, null=True, verbose_name='消息内容')),
                ('date_action', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('is_new', models.BooleanField(default=True, verbose_name='是否为最新')),
            ],
            options={
                'db_table': 'my_message',
                'verbose_name': '我的消息',
                'verbose_name_plural': '我的消息',
            },
        ),
        migrations.CreateModel(
            name='RecommendedReading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading_type', models.CharField(choices=[('AV', '官方活动'), ('NW', '开发者资讯'), ('DC', '技术交流')], default='AV', max_length=2, verbose_name='文章类型')),
                ('title', models.CharField(max_length=200, verbose_name='文章标题')),
                ('url', models.URLField(verbose_name='文章链接')),
            ],
            options={
                'db_table': 'recommended_reading',
                'verbose_name': '首页推荐文章',
                'verbose_name_plural': '首页推荐文章',
            },
        ),
        migrations.CreateModel(
            name='RecommendKeywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='推荐搜索关键词')),
            ],
            options={
                'db_table': 'recommend_keywords',
                'verbose_name': '推荐搜索关键词',
                'verbose_name_plural': '推荐搜索关键词',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='阶段名称')),
                ('description', models.TextField(verbose_name='阶段描述')),
                ('price', models.IntegerField(verbose_name='阶段价格')),
                ('index', models.IntegerField(default=999, verbose_name='阶段顺序(从小到大)')),
                ('is_try', models.BooleanField(default=False, verbose_name='是否是试学阶段')),
                ('career_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.CareerCourse', verbose_name='职业课程')),
            ],
            options={
                'db_table': 'stage',
                'verbose_name': '课程阶段',
                'verbose_name_plural': '课程阶段',
                'ordering': ['index', 'id'],
            },
        ),
        migrations.CreateModel(
            name='UserLearningLesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_learning', models.DateTimeField(auto_now=True, verbose_name='最近学习时间')),
                ('is_complete', models.BooleanField(default=False, verbose_name='是否完成观看')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Lesson', verbose_name='章节')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'db_table': 'user_learning_lesson',
                'verbose_name': '我的章节',
                'verbose_name_plural': '我的章节',
            },
        ),
        migrations.CreateModel(
            name='UserPurchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_price', models.IntegerField(verbose_name='金额')),
                ('order_no', models.CharField(max_length=100, unique=True, verbose_name='订单号')),
                ('trade_no', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='交易号')),
                ('pay_type', models.SmallIntegerField(choices=[(0, '全款'), (1, '试学首付款'), (2, '尾款'), (3, '阶段款')], default=0, verbose_name='支付类型')),
                ('date_add', models.DateTimeField(auto_now_add=True, verbose_name='下单时间')),
                ('date_pay', models.DateTimeField(blank=True, null=True, verbose_name='支付时间')),
                ('pay_way', models.SmallIntegerField(choices=[(1, '网页支付宝'), (2, '移动支付宝')], verbose_name='支付方式')),
                ('pay_status', models.SmallIntegerField(blank=True, choices=[(0, '未支付'), (1, '支付成功'), (2, '支付失败')], default=0, null=True, verbose_name='支付状态')),
                ('pay_careercourse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.CareerCourse', verbose_name='支付订单对应职业课程')),
                ('pay_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Class', verbose_name='支付订单对应班级号')),
                ('pay_stage', models.ManyToManyField(to='common.Stage', verbose_name='支付订单对应阶段')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'db_table': 'user_purchase',
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
            },
        ),
        migrations.CreateModel(
            name='UserUnlockStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_unlock', models.DateTimeField(auto_now_add=True, verbose_name='解锁时间')),
                ('stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Stage', verbose_name='解锁的阶段')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'db_table': 'user_unlock_stage',
                'verbose_name': '我的解锁阶段',
                'verbose_name_plural': '我的解锁阶段',
            },
        ),
        migrations.AddField(
            model_name='discuss',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Lesson', verbose_name='章节'),
        ),
        migrations.AddField(
            model_name='discuss',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='discuss',
            name='user_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Class', verbose_name='班级'),
        ),
        migrations.AddField(
            model_name='course',
            name='search_keywords',
            field=models.ManyToManyField(to='common.Keywords', verbose_name='小课程搜索关键词'),
        ),
        migrations.AddField(
            model_name='course',
            name='stages',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Stage', verbose_name='阶段'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='老师'),
        ),
        migrations.AddField(
            model_name='class',
            name='students',
            field=models.ManyToManyField(related_name='students', through='common.ClassStudents', to=settings.AUTH_USER_MODEL, verbose_name='班级学生'),
        ),
        migrations.AddField(
            model_name='class',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL, verbose_name='班级老师'),
        ),
        migrations.AddField(
            model_name='careercourse',
            name='search_keywords',
            field=models.ManyToManyField(to='common.Keywords', verbose_name='搜索关键词'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='myfavorite',
            field=models.ManyToManyField(through='common.MyFavorite', to='common.Course', verbose_name='我的收藏'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='mylesson',
            field=models.ManyToManyField(through='common.UserLearningLesson', to='common.Lesson', verbose_name='我的学习章节'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='mystage',
            field=models.ManyToManyField(through='common.UserUnlockStage', to='common.Stage', verbose_name='我的解锁阶段'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='userunlockstage',
            unique_together=set([('user', 'stage')]),
        ),
        migrations.AlterUniqueTogether(
            name='userlearninglesson',
            unique_together=set([('user', 'lesson')]),
        ),
        migrations.AlterUniqueTogether(
            name='myfavorite',
            unique_together=set([('user', 'course')]),
        ),
        migrations.AlterUniqueTogether(
            name='classstudents',
            unique_together=set([('user', 'student_class')]),
        ),
    ]
